

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Mar 20 18:10:05 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1840
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC12F1840 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  010C                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011D                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0197                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019E                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  0212                     	;# 
   140  0212                     	;# 
   141  0213                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  0291                     	;# 
   153  0291                     	;# 
   154  0292                     	;# 
   155  0293                     	;# 
   156  0294                     	;# 
   157  0295                     	;# 
   158  0295                     	;# 
   159  0296                     	;# 
   160  0391                     	;# 
   161  0392                     	;# 
   162  0393                     	;# 
   163  039A                     	;# 
   164  039C                     	;# 
   165  039D                     	;# 
   166  039E                     	;# 
   167  039F                     	;# 
   168  0FE4                     	;# 
   169  0FE5                     	;# 
   170  0FE6                     	;# 
   171  0FE7                     	;# 
   172  0FE8                     	;# 
   173  0FE9                     	;# 
   174  0FEA                     	;# 
   175  0FEB                     	;# 
   176  0FED                     	;# 
   177  0FEE                     	;# 
   178  0FEF                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  008C                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  010C                     	;# 
   220  0111                     	;# 
   221  0112                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0117                     	;# 
   225  0118                     	;# 
   226  0119                     	;# 
   227  011A                     	;# 
   228  011B                     	;# 
   229  011D                     	;# 
   230  011D                     	;# 
   231  018C                     	;# 
   232  0191                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0193                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0194                     	;# 
   239  0195                     	;# 
   240  0196                     	;# 
   241  0197                     	;# 
   242  0199                     	;# 
   243  019A                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019C                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019E                     	;# 
   252  019F                     	;# 
   253  020C                     	;# 
   254  0211                     	;# 
   255  0211                     	;# 
   256  0212                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0213                     	;# 
   260  0214                     	;# 
   261  0214                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0216                     	;# 
   266  0216                     	;# 
   267  0217                     	;# 
   268  0217                     	;# 
   269  0291                     	;# 
   270  0291                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0294                     	;# 
   274  0295                     	;# 
   275  0295                     	;# 
   276  0296                     	;# 
   277  0391                     	;# 
   278  0392                     	;# 
   279  0393                     	;# 
   280  039A                     	;# 
   281  039C                     	;# 
   282  039D                     	;# 
   283  039E                     	;# 
   284  039F                     	;# 
   285  0FE4                     	;# 
   286  0FE5                     	;# 
   287  0FE6                     	;# 
   288  0FE7                     	;# 
   289  0FE8                     	;# 
   290  0FE9                     	;# 
   291  0FEA                     	;# 
   292  0FEB                     	;# 
   293  0FED                     	;# 
   294  0FEE                     	;# 
   295  0FEF                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  008C                     	;# 
   323  0091                     	;# 
   324  0092                     	;# 
   325  0095                     	;# 
   326  0096                     	;# 
   327  0097                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009A                     	;# 
   331  009B                     	;# 
   332  009B                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  010C                     	;# 
   337  0111                     	;# 
   338  0112                     	;# 
   339  0115                     	;# 
   340  0116                     	;# 
   341  0117                     	;# 
   342  0118                     	;# 
   343  0119                     	;# 
   344  011A                     	;# 
   345  011B                     	;# 
   346  011D                     	;# 
   347  011D                     	;# 
   348  018C                     	;# 
   349  0191                     	;# 
   350  0191                     	;# 
   351  0192                     	;# 
   352  0193                     	;# 
   353  0193                     	;# 
   354  0193                     	;# 
   355  0194                     	;# 
   356  0195                     	;# 
   357  0196                     	;# 
   358  0197                     	;# 
   359  0199                     	;# 
   360  019A                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019C                     	;# 
   366  019C                     	;# 
   367  019D                     	;# 
   368  019E                     	;# 
   369  019F                     	;# 
   370  020C                     	;# 
   371  0211                     	;# 
   372  0211                     	;# 
   373  0212                     	;# 
   374  0212                     	;# 
   375  0213                     	;# 
   376  0213                     	;# 
   377  0214                     	;# 
   378  0214                     	;# 
   379  0215                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0216                     	;# 
   383  0216                     	;# 
   384  0217                     	;# 
   385  0217                     	;# 
   386  0291                     	;# 
   387  0291                     	;# 
   388  0292                     	;# 
   389  0293                     	;# 
   390  0294                     	;# 
   391  0295                     	;# 
   392  0295                     	;# 
   393  0296                     	;# 
   394  0391                     	;# 
   395  0392                     	;# 
   396  0393                     	;# 
   397  039A                     	;# 
   398  039C                     	;# 
   399  039D                     	;# 
   400  039E                     	;# 
   401  039F                     	;# 
   402  0FE4                     	;# 
   403  0FE5                     	;# 
   404  0FE6                     	;# 
   405  0FE7                     	;# 
   406  0FE8                     	;# 
   407  0FE9                     	;# 
   408  0FEA                     	;# 
   409  0FEB                     	;# 
   410  0FED                     	;# 
   411  0FEE                     	;# 
   412  0FEF                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0008                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  0011                     	;# 
   427  0012                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  008C                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  010C                     	;# 
   454  0111                     	;# 
   455  0112                     	;# 
   456  0115                     	;# 
   457  0116                     	;# 
   458  0117                     	;# 
   459  0118                     	;# 
   460  0119                     	;# 
   461  011A                     	;# 
   462  011B                     	;# 
   463  011D                     	;# 
   464  011D                     	;# 
   465  018C                     	;# 
   466  0191                     	;# 
   467  0191                     	;# 
   468  0192                     	;# 
   469  0193                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0194                     	;# 
   473  0195                     	;# 
   474  0196                     	;# 
   475  0197                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019E                     	;# 
   486  019F                     	;# 
   487  020C                     	;# 
   488  0211                     	;# 
   489  0211                     	;# 
   490  0212                     	;# 
   491  0212                     	;# 
   492  0213                     	;# 
   493  0213                     	;# 
   494  0214                     	;# 
   495  0214                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0391                     	;# 
   512  0392                     	;# 
   513  0393                     	;# 
   514  039A                     	;# 
   515  039C                     	;# 
   516  039D                     	;# 
   517  039E                     	;# 
   518  039F                     	;# 
   519  0FE4                     	;# 
   520  0FE5                     	;# 
   521  0FE6                     	;# 
   522  0FE7                     	;# 
   523  0FE8                     	;# 
   524  0FE9                     	;# 
   525  0FEA                     	;# 
   526  0FEB                     	;# 
   527  0FED                     	;# 
   528  0FEE                     	;# 
   529  0FEF                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0008                     	;# 
   539  0009                     	;# 
   540  000A                     	;# 
   541  000B                     	;# 
   542  000C                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  008C                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  010C                     	;# 
   571  0111                     	;# 
   572  0112                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  011A                     	;# 
   579  011B                     	;# 
   580  011D                     	;# 
   581  011D                     	;# 
   582  018C                     	;# 
   583  0191                     	;# 
   584  0191                     	;# 
   585  0192                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0194                     	;# 
   590  0195                     	;# 
   591  0196                     	;# 
   592  0197                     	;# 
   593  0199                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019D                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0216                     	;# 
   617  0216                     	;# 
   618  0217                     	;# 
   619  0217                     	;# 
   620  0291                     	;# 
   621  0291                     	;# 
   622  0292                     	;# 
   623  0293                     	;# 
   624  0294                     	;# 
   625  0295                     	;# 
   626  0295                     	;# 
   627  0296                     	;# 
   628  0391                     	;# 
   629  0392                     	;# 
   630  0393                     	;# 
   631  039A                     	;# 
   632  039C                     	;# 
   633  039D                     	;# 
   634  039E                     	;# 
   635  039F                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647                           
   648                           	psect	nvBANK0
   649  0051                     __pnvBANK0:
   650  0051                     _IOCAF0_InterruptHandler:
   651  0051                     	ds	2
   652  000B                     _INTCONbits	set	11
   653  0060                     _RA0	set	96
   654  0095                     _OPTION_REGbits	set	149
   655  008C                     _TRISA	set	140
   656  0097                     _WDTCON	set	151
   657  0098                     _OSCTUNE	set	152
   658  0099                     _OSCCON	set	153
   659  010C                     _LATAbits	set	268
   660  011D                     _APFCON	set	285
   661  010C                     _LATA	set	268
   662  0116                     _BORCON	set	278
   663  018C                     _ANSELA	set	396
   664  020C                     _WPUA	set	524
   665  0391                     _IOCAPbits	set	913
   666  0392                     _IOCANbits	set	914
   667  0393                     _IOCAFbits	set	915
   668                           
   669                           	psect	cinit
   670  001C                     start_initialization:	
   671                           ; #config settings
   672                           
   673  001C                     __initialization:
   674                           
   675                           ; Clear objects allocated to BANK0
   676  001C  0020               	movlb	0	; select bank0
   677  001D  01C9               	clrf	__pbssBANK0& (0+127)
   678  001E  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   679  001F  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   680  0020  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   681  0021  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   682  0022  01CE               	clrf	(__pbssBANK0+5)& (0+127)
   683  0023  01CF               	clrf	(__pbssBANK0+6)& (0+127)
   684  0024  01D0               	clrf	(__pbssBANK0+7)& (0+127)
   685  0025                     end_of_initialization:	
   686                           ;End of C runtime variable initialization code
   687                           
   688  0025                     __end_of__initialization:
   689  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   690  0026  0020               	movlb	0
   691  0027  3180  28A8         	ljmp	_main	;jump to C main() function
   692                           
   693                           	psect	bssBANK0
   694  0049                     __pbssBANK0:
   695  0049                     _seed:
   696  0049                     	ds	8
   697                           
   698                           	psect	cstackCOMMON
   699  0070                     __pcstackCOMMON:
   700  0070                     ?_PIN_MANAGER_Initialize:
   701  0070                     ?_OSCILLATOR_Initialize:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_WDT_Initialize:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_IOCAF0_DefaultInterruptHandler:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_IOCAF0_DefaultInterruptHandler:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_IOCAF0_ISR:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ??_IOCAF0_ISR:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_SYSTEM_Initialize:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_PIN_MANAGER_IOC:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ??_PIN_MANAGER_IOC:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_main:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_INTERRUPT_InterruptManager:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_INTERRUPT_InterruptManager:	
   735                           ; 1 bytes @ 0x0
   736                           
   737                           
   738                           ; 1 bytes @ 0x0
   739  0070                     	ds	1
   740  0071                     ??_OSCILLATOR_Initialize:
   741  0071                     ??_WDT_Initialize:	
   742                           ; 1 bytes @ 0x1
   743                           
   744  0071                     ?_IOCAF0_SetInterruptHandler:	
   745                           ; 1 bytes @ 0x1
   746                           
   747  0071                     ?_srand:	
   748                           ; 1 bytes @ 0x1
   749                           
   750  0071                     ?_Ausgabe:	
   751                           ; 1 bytes @ 0x1
   752                           
   753  0071                     ??___omul:	
   754                           ; 1 bytes @ 0x1
   755                           
   756  0071                     IOCAF0_SetInterruptHandler@InterruptHandler:	
   757                           ; 1 bytes @ 0x1
   758                           
   759  0071                     Ausgabe@y:	
   760                           ; 2 bytes @ 0x1
   761                           
   762  0071                     srand@s:	
   763                           ; 2 bytes @ 0x1
   764                           
   765                           
   766                           ; 2 bytes @ 0x1
   767  0071                     	ds	1
   768  0072                     ___omul@product:
   769                           
   770                           ; 8 bytes @ 0x2
   771  0072                     	ds	1
   772  0073                     ??_PIN_MANAGER_Initialize:
   773  0073                     ??_IOCAF0_SetInterruptHandler:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     ??_srand:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ??_SYSTEM_Initialize:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ??_Ausgabe:	
   783                           ; 1 bytes @ 0x3
   784                           
   785                           
   786                           ; 1 bytes @ 0x3
   787  0073                     	ds	7
   788  007A                     ?_rand:
   789                           
   790                           ; 2 bytes @ 0xA
   791  007A                     	ds	2
   792  007C                     ??___awmod:
   793                           
   794                           ; 1 bytes @ 0xC
   795  007C                     	ds	1
   796  007D                     ??_Wurfzahl:
   797                           
   798                           	psect	cstackBANK0
   799  0020                     __pcstackBANK0:	
   800                           ; 1 bytes @ 0xD
   801                           
   802  0020                     ?___omul:
   803  0020                     ___omul@multiplier:	
   804                           ; 8 bytes @ 0x0
   805                           
   806                           
   807                           ; 8 bytes @ 0x0
   808  0020                     	ds	8
   809  0028                     ___omul@multiplicand:
   810                           
   811                           ; 8 bytes @ 0x8
   812  0028                     	ds	8
   813  0030                     ??_rand:
   814                           
   815                           ; 1 bytes @ 0x10
   816  0030                     	ds	8
   817  0038                     ?___awmod:
   818  0038                     ___awmod@divisor:	
   819                           ; 2 bytes @ 0x18
   820                           
   821                           
   822                           ; 2 bytes @ 0x18
   823  0038                     	ds	2
   824  003A                     ___awmod@dividend:
   825                           
   826                           ; 2 bytes @ 0x1A
   827  003A                     	ds	2
   828  003C                     ___awmod@counter:
   829                           
   830                           ; 1 bytes @ 0x1C
   831  003C                     	ds	1
   832  003D                     ___awmod@sign:
   833                           
   834                           ; 1 bytes @ 0x1D
   835  003D                     	ds	1
   836  003E                     ?_Wurfzahl:
   837  003E                     Wurfzahl@y:	
   838                           ; 2 bytes @ 0x1E
   839                           
   840                           
   841                           ; 2 bytes @ 0x1E
   842  003E                     	ds	2
   843  0040                     Wurfzahl@zufallszahl:
   844                           
   845                           ; 2 bytes @ 0x20
   846  0040                     	ds	2
   847  0042                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x22
   850  0042                     	ds	2
   851  0044                     main@counter:
   852                           
   853                           ; 2 bytes @ 0x24
   854  0044                     	ds	2
   855  0046                     main@x:
   856                           
   857                           ; 1 bytes @ 0x26
   858  0046                     	ds	1
   859  0047                     main@wurf:
   860                           
   861                           ; 2 bytes @ 0x27
   862  0047                     	ds	2
   863                           
   864                           	psect	maintext
   865  00A8                     __pmaintext:	
   866 ;;
   867 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   868 ;;
   869 ;; *************** function _main *****************
   870 ;; Defined at:
   871 ;;		line 108 in file "main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  wurf            2   39[BANK0 ] int 
   876 ;;  counter         2   36[BANK0 ] int 
   877 ;;  x               1   38[BANK0 ] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : B1F/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   887 ;;      Params:         0       0       0       0
   888 ;;      Locals:         0       5       0       0
   889 ;;      Temps:          0       2       0       0
   890 ;;      Totals:         0       7       0       0
   891 ;;Total ram usage:        7 bytes
   892 ;; Hardware stack levels required when called:    7
   893 ;; This function calls:
   894 ;;		_Ausgabe
   895 ;;		_SYSTEM_Initialize
   896 ;;		_Wurfzahl
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _main
   904  00A8                     _main:
   905  00A8                     l1070:	
   906                           ;incstack = 0
   907                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   908                           
   909                           
   910                           ;main.c: 111:     SYSTEM_Initialize();
   911  00A8  3182  2252  3180   	fcall	_SYSTEM_Initialize
   912  00AB                     l1072:
   913                           
   914                           ;main.c: 113:     (INTCONbits.GIE = 1);
   915  00AB  178B               	bsf	11,7	;volatile
   916  00AC                     l1074:
   917                           
   918                           ;main.c: 115:     (INTCONbits.PEIE = 1);
   919  00AC  170B               	bsf	11,6	;volatile
   920  00AD                     l1076:
   921                           
   922                           ;main.c: 117:     uint8_t x = 6;
   923  00AD  3006               	movlw	6
   924  00AE  0020               	movlb	0	; select bank0
   925  00AF  00C2               	movwf	??_main
   926  00B0  0842               	movf	??_main,w
   927  00B1  00C6               	movwf	main@x
   928  00B2                     l1078:
   929                           
   930                           ;main.c: 119:     int counter, wurf = 0;
   931  00B2  01C7               	clrf	main@wurf
   932  00B3  01C8               	clrf	main@wurf+1
   933  00B4                     l1080:
   934                           
   935                           ;main.c: 123:     {;main.c: 124:         if (RA0 != 0 && wurf != 1){
   936  00B4  0020               	movlb	0	; select bank0
   937  00B5  1C0C               	btfss	12,0	;volatile
   938  00B6  28B8               	goto	u361
   939  00B7  28B9               	goto	u360
   940  00B8                     u361:
   941  00B8  28D7               	goto	l1090
   942  00B9                     u360:
   943  00B9                     l1082:
   944  00B9  0347               	decf	main@wurf,w
   945  00BA  0448               	iorwf	main@wurf+1,w
   946  00BB  1903               	btfsc	3,2
   947  00BC  28BE               	goto	u371
   948  00BD  28BF               	goto	u370
   949  00BE                     u371:
   950  00BE  28D7               	goto	l1090
   951  00BF                     u370:
   952  00BF                     l1084:
   953                           
   954                           ;main.c: 125:             x = Wurfzahl(wurf);
   955  00BF  0848               	movf	main@wurf+1,w
   956  00C0  00BF               	movwf	Wurfzahl@y+1
   957  00C1  0847               	movf	main@wurf,w
   958  00C2  00BE               	movwf	Wurfzahl@y
   959  00C3  3181  21F3  3180   	fcall	_Wurfzahl
   960  00C6  0020               	movlb	0	; select bank0
   961  00C7  083E               	movf	?_Wurfzahl,w
   962  00C8  00C2               	movwf	??_main
   963  00C9  0842               	movf	??_main,w
   964  00CA  00C6               	movwf	main@x
   965  00CB                     l1086:
   966                           
   967                           ;main.c: 126:             counter = 0;
   968  00CB  01C4               	clrf	main@counter
   969  00CC  01C5               	clrf	main@counter+1
   970  00CD                     l1088:
   971                           
   972                           ;main.c: 127:             Ausgabe(x);
   973  00CD  0846               	movf	main@x,w
   974  00CE  00C2               	movwf	??_main
   975  00CF  01C3               	clrf	??_main+1
   976  00D0  0842               	movf	??_main,w
   977  00D1  00F1               	movwf	Ausgabe@y
   978  00D2  0843               	movf	??_main+1,w
   979  00D3  00F2               	movwf	Ausgabe@y+1
   980  00D4  3181  21C1  3180   	fcall	_Ausgabe
   981  00D7                     l1090:
   982                           
   983                           ;main.c: 130:         if (counter >= 15000){
   984  00D7  0020               	movlb	0	; select bank0
   985  00D8  0845               	movf	main@counter+1,w
   986  00D9  3A80               	xorlw	128
   987  00DA  00C2               	movwf	??_main
   988  00DB  30BA               	movlw	186
   989  00DC  0242               	subwf	??_main,w
   990  00DD  1D03               	skipz
   991  00DE  28E1               	goto	u385
   992  00DF  3098               	movlw	152
   993  00E0  0244               	subwf	main@counter,w
   994  00E1                     u385:
   995  00E1  1C03               	skipc
   996  00E2  28E4               	goto	u381
   997  00E3  28E5               	goto	u380
   998  00E4                     u381:
   999  00E4  2908               	goto	l1098
  1000  00E5                     u380:
  1001  00E5                     l136:	
  1002                           ;main.c: 132:             do { LATAbits.LATA5 = 0; } while(0);
  1003                           
  1004  00E5  0022               	movlb	2	; select bank2
  1005  00E6  128C               	bcf	12,5	;volatile
  1006  00E7                     l138:	
  1007                           ;main.c: 133:             do { LATAbits.LATA4 = 0; } while(0);
  1008                           
  1009  00E7  120C               	bcf	12,4	;volatile
  1010  00E8                     l140:	
  1011                           ;main.c: 134:             do { LATAbits.LATA2 = 0; } while(0);
  1012                           
  1013  00E8  110C               	bcf	12,2	;volatile
  1014  00E9                     l142:	
  1015                           ;main.c: 135:             do { LATAbits.LATA1 = 0; } while(0);
  1016                           
  1017  00E9  108C               	bcf	12,1	;volatile
  1018  00EA                     l143:
  1019  00EA  0063               	sleep	;# 
  1020  00EB                     l1092:
  1021                           
  1022                           ;main.c: 139:             counter = 0;
  1023  00EB  0020               	movlb	0	; select bank0
  1024  00EC  01C4               	clrf	main@counter
  1025  00ED  01C5               	clrf	main@counter+1
  1026                           
  1027                           ;main.c: 140:             wurf = 0;
  1028  00EE  01C7               	clrf	main@wurf
  1029  00EF  01C8               	clrf	main@wurf+1
  1030  00F0                     l1094:
  1031                           
  1032                           ;main.c: 142:             Ausgabe(x);
  1033  00F0  0846               	movf	main@x,w
  1034  00F1  00C2               	movwf	??_main
  1035  00F2  01C3               	clrf	??_main+1
  1036  00F3  0842               	movf	??_main,w
  1037  00F4  00F1               	movwf	Ausgabe@y
  1038  00F5  0843               	movf	??_main+1,w
  1039  00F6  00F2               	movwf	Ausgabe@y+1
  1040  00F7  3181  21C1  3180   	fcall	_Ausgabe
  1041  00FA                     l1096:
  1042                           
  1043                           ;main.c: 144:             _delay((unsigned long)((800)*(8000000/4000.0)));
  1044  00FA  3009               	movlw	9
  1045  00FB  0020               	movlb	0	; select bank0
  1046  00FC  00C3               	movwf	??_main+1
  1047  00FD  301E               	movlw	30
  1048  00FE  00C2               	movwf	??_main
  1049  00FF  30E4               	movlw	228
  1050  0100                     u417:
  1051  0100  0B89               	decfsz	9,f
  1052  0101  2900               	goto	u417
  1053  0102  0BC2               	decfsz	??_main,f
  1054  0103  2900               	goto	u417
  1055  0104  0BC3               	decfsz	??_main+1,f
  1056  0105  2900               	goto	u417
  1057  0106  0000               	nop
  1058                           
  1059                           ;main.c: 145:         }
  1060  0107  28B4               	goto	l1080
  1061  0108                     l1098:
  1062                           
  1063                           ;main.c: 147:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1064  0108  3003               	movlw	3
  1065  0109  0020               	movlb	0	; select bank0
  1066  010A  00C2               	movwf	??_main
  1067  010B  3097               	movlw	151
  1068  010C                     u427:
  1069  010C  0B89               	decfsz	9,f
  1070  010D  290C               	goto	u427
  1071  010E  0BC2               	decfsz	??_main,f
  1072  010F  290C               	goto	u427
  1073  0110  3200               	nop2
  1074  0111                     l1100:
  1075                           
  1076                           ;main.c: 148:             counter = counter + 1;
  1077  0111  0020               	movlb	0	; select bank0
  1078  0112  0844               	movf	main@counter,w
  1079  0113  3E01               	addlw	1
  1080  0114  00C4               	movwf	main@counter
  1081  0115  3000               	movlw	0
  1082  0116  3D45               	addwfc	main@counter+1,w
  1083  0117  00C5               	movwf	main@counter+1
  1084  0118                     l1102:
  1085                           
  1086                           ;main.c: 149:             wurf = wurf + 1;
  1087  0118  0847               	movf	main@wurf,w
  1088  0119  3E01               	addlw	1
  1089  011A  00C7               	movwf	main@wurf
  1090  011B  3000               	movlw	0
  1091  011C  3D48               	addwfc	main@wurf+1,w
  1092  011D  00C8               	movwf	main@wurf+1
  1093  011E  28B4               	goto	l1080
  1094  011F  3180  281A         	ljmp	start
  1095  0121                     __end_of_main:
  1096                           
  1097                           	psect	text1
  1098  01F3                     __ptext1:	
  1099 ;; *************** function _Wurfzahl *****************
  1100 ;; Defined at:
  1101 ;;		line 100 in file "main.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  y               2   30[BANK0 ] int 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  zufallszahl     2   32[BANK0 ] int 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2   30[BANK0 ] int 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1115 ;;      Params:         0       2       0       0
  1116 ;;      Locals:         0       2       0       0
  1117 ;;      Temps:          0       0       0       0
  1118 ;;      Totals:         0       4       0       0
  1119 ;;Total ram usage:        4 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    6
  1122 ;; This function calls:
  1123 ;;		___awmod
  1124 ;;		_rand
  1125 ;;		_srand
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _Wurfzahl
  1133  01F3                     _Wurfzahl:
  1134  01F3                     l1062:	
  1135                           ;incstack = 0
  1136                           ; Regs used in _Wurfzahl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1137                           
  1138                           
  1139                           ;main.c: 101:         int zufallszahl;;main.c: 102:         srand(y);
  1140  01F3  0020               	movlb	0	; select bank0
  1141  01F4  083F               	movf	Wurfzahl@y+1,w
  1142  01F5  00F2               	movwf	srand@s+1
  1143  01F6  083E               	movf	Wurfzahl@y,w
  1144  01F7  00F1               	movwf	srand@s
  1145  01F8  3182  2231  3181   	fcall	_srand
  1146  01FB                     l1064:
  1147                           
  1148                           ;main.c: 103:         zufallszahl = rand() % 6 + 1;
  1149  01FB  3006               	movlw	6
  1150  01FC  0020               	movlb	0	; select bank0
  1151  01FD  00B8               	movwf	___awmod@divisor
  1152  01FE  3000               	movlw	0
  1153  01FF  00B9               	movwf	___awmod@divisor+1
  1154  0200  3180  2029  3181   	fcall	_rand
  1155  0203  087B               	movf	?_rand+1,w
  1156  0204  0020               	movlb	0	; select bank0
  1157  0205  00BB               	movwf	___awmod@dividend+1
  1158  0206  087A               	movf	?_rand,w
  1159  0207  00BA               	movwf	___awmod@dividend
  1160  0208  3181  2121  3181   	fcall	___awmod
  1161  020B  0020               	movlb	0	; select bank0
  1162  020C  0838               	movf	?___awmod,w
  1163  020D  3E01               	addlw	1
  1164  020E  00C0               	movwf	Wurfzahl@zufallszahl
  1165  020F  3000               	movlw	0
  1166  0210  3D39               	addwfc	?___awmod+1,w
  1167  0211  00C1               	movwf	Wurfzahl@zufallszahl+1
  1168  0212                     l1066:
  1169                           
  1170                           ;main.c: 105:         return zufallszahl;
  1171  0212  0841               	movf	Wurfzahl@zufallszahl+1,w
  1172  0213  00BF               	movwf	?_Wurfzahl+1
  1173  0214  0840               	movf	Wurfzahl@zufallszahl,w
  1174  0215  00BE               	movwf	?_Wurfzahl
  1175  0216                     l128:
  1176  0216  0008               	return
  1177  0217                     __end_of_Wurfzahl:
  1178                           
  1179                           	psect	text2
  1180  0231                     __ptext2:	
  1181 ;; *************** function _srand *****************
  1182 ;; Defined at:
  1183 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\rand.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  s               2    1[COMMON] unsigned int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1197 ;;      Params:         2       0       0       0
  1198 ;;      Locals:         0       0       0       0
  1199 ;;      Temps:          2       0       0       0
  1200 ;;      Totals:         4       0       0       0
  1201 ;;Total ram usage:        4 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    4
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_Wurfzahl
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _srand
  1213  0231                     _srand:
  1214  0231                     l1002:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _srand: [wreg+status,2+status,0]
  1217                           
  1218  0231  0871               	movf	srand@s,w
  1219  0232  3EFF               	addlw	255
  1220  0233  00F3               	movwf	??_srand
  1221  0234  30FF               	movlw	255
  1222  0235  3D72               	addwfc	srand@s+1,w
  1223  0236  00F4               	movwf	??_srand+1
  1224  0237  0873               	movf	??_srand,w
  1225  0238  0020               	movlb	0	; select bank0
  1226  0239  00C9               	movwf	_seed
  1227  023A  0874               	movf	??_srand+1,w
  1228  023B  00CA               	movwf	_seed+1
  1229  023C  01CB               	clrf	_seed+2
  1230  023D  01CC               	clrf	_seed+3
  1231  023E  01CD               	clrf	_seed+4
  1232  023F  01CE               	clrf	_seed+5
  1233  0240  01CF               	clrf	_seed+6
  1234  0241  01D0               	clrf	_seed+7
  1235  0242                     l771:
  1236  0242  0008               	return
  1237  0243                     __end_of_srand:
  1238                           
  1239                           	psect	text3
  1240  0029                     __ptext3:	
  1241 ;; *************** function _rand *****************
  1242 ;; Defined at:
  1243 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\rand.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  2   10[COMMON] int 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1257 ;;      Params:         2       0       0       0
  1258 ;;      Locals:         0       0       0       0
  1259 ;;      Temps:          0       8       0       0
  1260 ;;      Totals:         2       8       0       0
  1261 ;;Total ram usage:       10 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    5
  1264 ;; This function calls:
  1265 ;;		___omul
  1266 ;; This function is called by:
  1267 ;;		_Wurfzahl
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _rand
  1273  0029                     _rand:
  1274  0029                     l1004:	
  1275                           ;incstack = 0
  1276                           ; Regs used in _rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1277                           
  1278  0029  3001               	movlw	1
  1279  002A  0020               	movlb	0	; select bank0
  1280  002B  00B0               	movwf	??_rand
  1281  002C  3000               	movlw	0
  1282  002D  00B1               	movwf	??_rand+1
  1283  002E  3000               	movlw	0
  1284  002F  00B2               	movwf	??_rand+2
  1285  0030  3000               	movlw	0
  1286  0031  00B3               	movwf	??_rand+3
  1287  0032  3000               	movlw	0
  1288  0033  00B4               	movwf	??_rand+4
  1289  0034  3000               	movlw	0
  1290  0035  00B5               	movwf	??_rand+5
  1291  0036  3000               	movlw	0
  1292  0037  00B6               	movwf	??_rand+6
  1293  0038  3000               	movlw	0
  1294  0039  00B7               	movwf	??_rand+7
  1295  003A  0849               	movf	_seed,w
  1296  003B  00A0               	movwf	___omul@multiplier
  1297  003C  084A               	movf	_seed+1,w
  1298  003D  00A1               	movwf	___omul@multiplier+1
  1299  003E  084B               	movf	_seed+2,w
  1300  003F  00A2               	movwf	___omul@multiplier+2
  1301  0040  084C               	movf	_seed+3,w
  1302  0041  00A3               	movwf	___omul@multiplier+3
  1303  0042  084D               	movf	_seed+4,w
  1304  0043  00A4               	movwf	___omul@multiplier+4
  1305  0044  084E               	movf	_seed+5,w
  1306  0045  00A5               	movwf	___omul@multiplier+5
  1307  0046  084F               	movf	_seed+6,w
  1308  0047  00A6               	movwf	___omul@multiplier+6
  1309  0048  0850               	movf	_seed+7,w
  1310  0049  00A7               	movwf	___omul@multiplier+7
  1311  004A  3058               	movlw	88
  1312  004B  00AF               	movwf	___omul@multiplicand+7
  1313  004C  3051               	movlw	81
  1314  004D  00AE               	movwf	___omul@multiplicand+6
  1315  004E  30F4               	movlw	244
  1316  004F  00AD               	movwf	___omul@multiplicand+5
  1317  0050  302D               	movlw	45
  1318  0051  00AC               	movwf	___omul@multiplicand+4
  1319  0052  304C               	movlw	76
  1320  0053  00AB               	movwf	___omul@multiplicand+3
  1321  0054  3095               	movlw	149
  1322  0055  00AA               	movwf	___omul@multiplicand+2
  1323  0056  307F               	movlw	127
  1324  0057  00A9               	movwf	___omul@multiplicand+1
  1325  0058  302D               	movlw	45
  1326  0059  00A8               	movwf	___omul@multiplicand
  1327  005A  3181  2175  3180   	fcall	___omul
  1328  005D  0020               	movlb	0	; select bank0
  1329  005E  3020               	movlw	low ?___omul
  1330  005F  0086               	movwf	6
  1331  0060  3000               	movlw	high ?___omul
  1332  0061  0087               	movwf	7
  1333  0062  3F40               	moviw [0]fsr1
  1334  0063  07B0               	addwf	??_rand,f
  1335  0064  3F41               	moviw [1]fsr1
  1336  0065  3DB1               	addwfc	??_rand+1,f
  1337  0066  3F42               	moviw [2]fsr1
  1338  0067  3DB2               	addwfc	??_rand+2,f
  1339  0068  3F43               	moviw [3]fsr1
  1340  0069  3DB3               	addwfc	??_rand+3,f
  1341  006A  3F44               	moviw [4]fsr1
  1342  006B  3DB4               	addwfc	??_rand+4,f
  1343  006C  3F45               	moviw [5]fsr1
  1344  006D  3DB5               	addwfc	??_rand+5,f
  1345  006E  3F46               	moviw [6]fsr1
  1346  006F  3DB6               	addwfc	??_rand+6,f
  1347  0070  3F47               	moviw [7]fsr1
  1348  0071  3DB7               	addwfc	??_rand+7,f
  1349  0072  0837               	movf	??_rand+7,w
  1350  0073  00D0               	movwf	_seed+7
  1351  0074  0836               	movf	??_rand+6,w
  1352  0075  00CF               	movwf	_seed+6
  1353  0076  0835               	movf	??_rand+5,w
  1354  0077  00CE               	movwf	_seed+5
  1355  0078  0834               	movf	??_rand+4,w
  1356  0079  00CD               	movwf	_seed+4
  1357  007A  0833               	movf	??_rand+3,w
  1358  007B  00CC               	movwf	_seed+3
  1359  007C  0832               	movf	??_rand+2,w
  1360  007D  00CB               	movwf	_seed+2
  1361  007E  0831               	movf	??_rand+1,w
  1362  007F  00CA               	movwf	_seed+1
  1363  0080  0830               	movf	??_rand,w
  1364  0081  00C9               	movwf	_seed
  1365  0082                     l1006:
  1366  0082  3049               	movlw	low _seed
  1367  0083  0086               	movwf	6
  1368  0084  3000               	movlw	high _seed
  1369  0085  0087               	movwf	7
  1370  0086  3F40               	moviw [0]fsr1
  1371  0087  00B0               	movwf	??_rand
  1372  0088  3F41               	moviw [1]fsr1
  1373  0089  00B1               	movwf	??_rand+1
  1374  008A  3F42               	moviw [2]fsr1
  1375  008B  00B2               	movwf	??_rand+2
  1376  008C  3F43               	moviw [3]fsr1
  1377  008D  00B3               	movwf	??_rand+3
  1378  008E  3F44               	moviw [4]fsr1
  1379  008F  00B4               	movwf	??_rand+4
  1380  0090  3F45               	moviw [5]fsr1
  1381  0091  00B5               	movwf	??_rand+5
  1382  0092  3F46               	moviw [6]fsr1
  1383  0093  00B6               	movwf	??_rand+6
  1384  0094  3F47               	moviw [7]fsr1
  1385  0095  00B7               	movwf	??_rand+7
  1386  0096  3031               	movlw	49
  1387  0097                     u255:
  1388  0097  0020               	movlb	0	; select bank0
  1389  0098  36B7               	lsrf	??_rand+7,f
  1390  0099  0CB6               	rrf	??_rand+6,f
  1391  009A  0CB5               	rrf	??_rand+5,f
  1392  009B  0CB4               	rrf	??_rand+4,f
  1393  009C  0CB3               	rrf	??_rand+3,f
  1394  009D  0CB2               	rrf	??_rand+2,f
  1395  009E  0CB1               	rrf	??_rand+1,f
  1396  009F  0CB0               	rrf	??_rand,f
  1397  00A0                     u250:
  1398  00A0  0B89               	decfsz	9,f
  1399  00A1  2897               	goto	u255
  1400  00A2  0020               	movlb	0	; select bank0
  1401  00A3  0831               	movf	??_rand+1,w
  1402  00A4  00FB               	movwf	?_rand+1
  1403  00A5  0830               	movf	??_rand,w
  1404  00A6  00FA               	movwf	?_rand
  1405  00A7                     l774:
  1406  00A7  0008               	return
  1407  00A8                     __end_of_rand:
  1408                           
  1409                           	psect	text4
  1410  0175                     __ptext4:	
  1411 ;; *************** function ___omul *****************
  1412 ;; Defined at:
  1413 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul64.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  multiplier      8    0[BANK0 ] unsigned long long 
  1416 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  product         8    2[COMMON] unsigned long long 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  8    0[BANK0 ] unsigned long long 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1428 ;;      Params:         0      16       0       0
  1429 ;;      Locals:         8       0       0       0
  1430 ;;      Temps:          1       0       0       0
  1431 ;;      Totals:         9      16       0       0
  1432 ;;Total ram usage:       25 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    4
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_rand
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function ___omul
  1444  0175                     ___omul:
  1445  0175                     l956:	
  1446                           ;incstack = 0
  1447                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
  1448                           
  1449  0175  3072               	movlw	low ___omul@product
  1450  0176  0086               	movwf	6
  1451  0177  3000               	movlw	high ___omul@product
  1452  0178  0087               	movwf	7
  1453  0179  3008               	movlw	8
  1454  017A  00F1               	movwf	??___omul
  1455  017B  3000               	movlw	0
  1456  017C                     u210:
  1457  017C  001E               	movwi fsr1++
  1458  017D  0BF1               	decfsz	??___omul,f
  1459  017E  297C               	goto	u210
  1460  017F                     l958:
  1461  017F  0020               	movlb	0	; select bank0
  1462  0180  1C20               	btfss	___omul@multiplier,0
  1463  0181  2983               	goto	u221
  1464  0182  2984               	goto	u220
  1465  0183                     u221:
  1466  0183  2994               	goto	l962
  1467  0184                     u220:
  1468  0184                     l960:
  1469  0184  0828               	movf	___omul@multiplicand,w
  1470  0185  07F2               	addwf	___omul@product,f
  1471  0186  0829               	movf	___omul@multiplicand+1,w
  1472  0187  3DF3               	addwfc	___omul@product+1,f
  1473  0188  082A               	movf	___omul@multiplicand+2,w
  1474  0189  3DF4               	addwfc	___omul@product+2,f
  1475  018A  082B               	movf	___omul@multiplicand+3,w
  1476  018B  3DF5               	addwfc	___omul@product+3,f
  1477  018C  082C               	movf	___omul@multiplicand+4,w
  1478  018D  3DF6               	addwfc	___omul@product+4,f
  1479  018E  082D               	movf	___omul@multiplicand+5,w
  1480  018F  3DF7               	addwfc	___omul@product+5,f
  1481  0190  082E               	movf	___omul@multiplicand+6,w
  1482  0191  3DF8               	addwfc	___omul@product+6,f
  1483  0192  082F               	movf	___omul@multiplicand+7,w
  1484  0193  3DF9               	addwfc	___omul@product+7,f
  1485  0194                     l962:
  1486  0194  35A8               	lslf	___omul@multiplicand,f
  1487  0195  0DA9               	rlf	___omul@multiplicand+1,f
  1488  0196  0DAA               	rlf	___omul@multiplicand+2,f
  1489  0197  0DAB               	rlf	___omul@multiplicand+3,f
  1490  0198  0DAC               	rlf	___omul@multiplicand+4,f
  1491  0199  0DAD               	rlf	___omul@multiplicand+5,f
  1492  019A  0DAE               	rlf	___omul@multiplicand+6,f
  1493  019B  0DAF               	rlf	___omul@multiplicand+7,f
  1494  019C                     l964:
  1495  019C  36A7               	lsrf	___omul@multiplier+7,f
  1496  019D  0CA6               	rrf	___omul@multiplier+6,f
  1497  019E  0CA5               	rrf	___omul@multiplier+5,f
  1498  019F  0CA4               	rrf	___omul@multiplier+4,f
  1499  01A0  0CA3               	rrf	___omul@multiplier+3,f
  1500  01A1  0CA2               	rrf	___omul@multiplier+2,f
  1501  01A2  0CA1               	rrf	___omul@multiplier+1,f
  1502  01A3  0CA0               	rrf	___omul@multiplier,f
  1503  01A4  0820               	movf	___omul@multiplier,w
  1504  01A5  0421               	iorwf	___omul@multiplier+1,w
  1505  01A6  0422               	iorwf	___omul@multiplier+2,w
  1506  01A7  0423               	iorwf	___omul@multiplier+3,w
  1507  01A8  0424               	iorwf	___omul@multiplier+4,w
  1508  01A9  0425               	iorwf	___omul@multiplier+5,w
  1509  01AA  0426               	iorwf	___omul@multiplier+6,w
  1510  01AB  0427               	iorwf	___omul@multiplier+7,w
  1511  01AC  1D03               	skipz
  1512  01AD  29AF               	goto	u231
  1513  01AE  29B0               	goto	u230
  1514  01AF                     u231:
  1515  01AF  297F               	goto	l958
  1516  01B0                     u230:
  1517  01B0                     l329:
  1518  01B0  0872               	movf	___omul@product,w
  1519  01B1  00A0               	movwf	?___omul
  1520  01B2  0873               	movf	___omul@product+1,w
  1521  01B3  00A1               	movwf	?___omul+1
  1522  01B4  0874               	movf	___omul@product+2,w
  1523  01B5  00A2               	movwf	?___omul+2
  1524  01B6  0875               	movf	___omul@product+3,w
  1525  01B7  00A3               	movwf	?___omul+3
  1526  01B8  0876               	movf	___omul@product+4,w
  1527  01B9  00A4               	movwf	?___omul+4
  1528  01BA  0877               	movf	___omul@product+5,w
  1529  01BB  00A5               	movwf	?___omul+5
  1530  01BC  0878               	movf	___omul@product+6,w
  1531  01BD  00A6               	movwf	?___omul+6
  1532  01BE  0879               	movf	___omul@product+7,w
  1533  01BF  00A7               	movwf	?___omul+7
  1534  01C0                     l330:
  1535  01C0  0008               	return
  1536  01C1                     __end_of___omul:
  1537                           
  1538                           	psect	text5
  1539  0121                     __ptext5:	
  1540 ;; *************** function ___awmod *****************
  1541 ;; Defined at:
  1542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  divisor         2   24[BANK0 ] int 
  1545 ;;  dividend        2   26[BANK0 ] int 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  sign            1   29[BANK0 ] unsigned char 
  1548 ;;  counter         1   28[BANK0 ] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  2   24[BANK0 ] int 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1558 ;;      Params:         0       4       0       0
  1559 ;;      Locals:         0       2       0       0
  1560 ;;      Temps:          1       0       0       0
  1561 ;;      Totals:         1       6       0       0
  1562 ;;Total ram usage:        7 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    4
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_Wurfzahl
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function ___awmod
  1574  0121                     ___awmod:
  1575  0121                     l1010:	
  1576                           ;incstack = 0
  1577                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1578                           
  1579  0121  0020               	movlb	0	; select bank0
  1580  0122  01BD               	clrf	___awmod@sign
  1581  0123                     l1012:
  1582  0123  1FBB               	btfss	___awmod@dividend+1,7
  1583  0124  2926               	goto	u261
  1584  0125  2927               	goto	u260
  1585  0126                     u261:
  1586  0126  292E               	goto	l1018
  1587  0127                     u260:
  1588  0127                     l1014:
  1589  0127  09BA               	comf	___awmod@dividend,f
  1590  0128  09BB               	comf	___awmod@dividend+1,f
  1591  0129  0ABA               	incf	___awmod@dividend,f
  1592  012A  1903               	skipnz
  1593  012B  0ABB               	incf	___awmod@dividend+1,f
  1594  012C                     l1016:
  1595  012C  01BD               	clrf	___awmod@sign
  1596  012D  0ABD               	incf	___awmod@sign,f
  1597  012E                     l1018:
  1598  012E  1FB9               	btfss	___awmod@divisor+1,7
  1599  012F  2931               	goto	u271
  1600  0130  2932               	goto	u270
  1601  0131                     u271:
  1602  0131  2937               	goto	l1022
  1603  0132                     u270:
  1604  0132                     l1020:
  1605  0132  09B8               	comf	___awmod@divisor,f
  1606  0133  09B9               	comf	___awmod@divisor+1,f
  1607  0134  0AB8               	incf	___awmod@divisor,f
  1608  0135  1903               	skipnz
  1609  0136  0AB9               	incf	___awmod@divisor+1,f
  1610  0137                     l1022:
  1611  0137  0838               	movf	___awmod@divisor,w
  1612  0138  0439               	iorwf	___awmod@divisor+1,w
  1613  0139  1903               	btfsc	3,2
  1614  013A  293C               	goto	u281
  1615  013B  293D               	goto	u280
  1616  013C                     u281:
  1617  013C  2966               	goto	l1040
  1618  013D                     u280:
  1619  013D                     l1024:
  1620  013D  01BC               	clrf	___awmod@counter
  1621  013E  0ABC               	incf	___awmod@counter,f
  1622  013F  2949               	goto	l1030
  1623  0140                     l1026:
  1624  0140  3001               	movlw	1
  1625  0141                     u295:
  1626  0141  35B8               	lslf	___awmod@divisor,f
  1627  0142  0DB9               	rlf	___awmod@divisor+1,f
  1628  0143  0B89               	decfsz	9,f
  1629  0144  2941               	goto	u295
  1630  0145                     l1028:
  1631  0145  3001               	movlw	1
  1632  0146  00FC               	movwf	??___awmod
  1633  0147  087C               	movf	??___awmod,w
  1634  0148  07BC               	addwf	___awmod@counter,f
  1635  0149                     l1030:
  1636  0149  1FB9               	btfss	___awmod@divisor+1,7
  1637  014A  294C               	goto	u301
  1638  014B  294D               	goto	u300
  1639  014C                     u301:
  1640  014C  2940               	goto	l1026
  1641  014D                     u300:
  1642  014D                     l1032:
  1643  014D  0839               	movf	___awmod@divisor+1,w
  1644  014E  023B               	subwf	___awmod@dividend+1,w
  1645  014F  1D03               	skipz
  1646  0150  2953               	goto	u315
  1647  0151  0838               	movf	___awmod@divisor,w
  1648  0152  023A               	subwf	___awmod@dividend,w
  1649  0153                     u315:
  1650  0153  1C03               	skipc
  1651  0154  2956               	goto	u311
  1652  0155  2957               	goto	u310
  1653  0156                     u311:
  1654  0156  295B               	goto	l1036
  1655  0157                     u310:
  1656  0157                     l1034:
  1657  0157  0838               	movf	___awmod@divisor,w
  1658  0158  02BA               	subwf	___awmod@dividend,f
  1659  0159  0839               	movf	___awmod@divisor+1,w
  1660  015A  3BBB               	subwfb	___awmod@dividend+1,f
  1661  015B                     l1036:
  1662  015B  3001               	movlw	1
  1663  015C                     u325:
  1664  015C  36B9               	lsrf	___awmod@divisor+1,f
  1665  015D  0CB8               	rrf	___awmod@divisor,f
  1666  015E  0B89               	decfsz	9,f
  1667  015F  295C               	goto	u325
  1668  0160                     l1038:
  1669  0160  3001               	movlw	1
  1670  0161  02BC               	subwf	___awmod@counter,f
  1671  0162  1D03               	btfss	3,2
  1672  0163  2965               	goto	u331
  1673  0164  2966               	goto	u330
  1674  0165                     u331:
  1675  0165  294D               	goto	l1032
  1676  0166                     u330:
  1677  0166                     l1040:
  1678  0166  083D               	movf	___awmod@sign,w
  1679  0167  1903               	btfsc	3,2
  1680  0168  296A               	goto	u341
  1681  0169  296B               	goto	u340
  1682  016A                     u341:
  1683  016A  2970               	goto	l1044
  1684  016B                     u340:
  1685  016B                     l1042:
  1686  016B  09BA               	comf	___awmod@dividend,f
  1687  016C  09BB               	comf	___awmod@dividend+1,f
  1688  016D  0ABA               	incf	___awmod@dividend,f
  1689  016E  1903               	skipnz
  1690  016F  0ABB               	incf	___awmod@dividend+1,f
  1691  0170                     l1044:
  1692  0170  083B               	movf	___awmod@dividend+1,w
  1693  0171  00B9               	movwf	?___awmod+1
  1694  0172  083A               	movf	___awmod@dividend,w
  1695  0173  00B8               	movwf	?___awmod
  1696  0174                     l476:
  1697  0174  0008               	return
  1698  0175                     __end_of___awmod:
  1699                           
  1700                           	psect	text6
  1701  0252                     __ptext6:	
  1702 ;; *************** function _SYSTEM_Initialize *****************
  1703 ;; Defined at:
  1704 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1718 ;;      Params:         0       0       0       0
  1719 ;;      Locals:         0       0       0       0
  1720 ;;      Temps:          0       0       0       0
  1721 ;;      Totals:         0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    6
  1725 ;; This function calls:
  1726 ;;		_OSCILLATOR_Initialize
  1727 ;;		_PIN_MANAGER_Initialize
  1728 ;;		_WDT_Initialize
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _SYSTEM_Initialize
  1736  0252                     _SYSTEM_Initialize:
  1737  0252                     l1048:	
  1738                           ;incstack = 0
  1739                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1740                           
  1741                           
  1742                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1743  0252  3182  2217  3182   	fcall	_PIN_MANAGER_Initialize
  1744                           
  1745                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1746  0255  3182  2265  3182   	fcall	_OSCILLATOR_Initialize
  1747                           
  1748                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1749  0258  3182  2272  3182   	fcall	_WDT_Initialize
  1750  025B                     l17:
  1751  025B  0008               	return
  1752  025C                     __end_of_SYSTEM_Initialize:
  1753                           
  1754                           	psect	text7
  1755  0272                     __ptext7:	
  1756 ;; *************** function _WDT_Initialize *****************
  1757 ;; Defined at:
  1758 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1772 ;;      Params:         0       0       0       0
  1773 ;;      Locals:         0       0       0       0
  1774 ;;      Temps:          0       0       0       0
  1775 ;;      Totals:         0       0       0       0
  1776 ;;Total ram usage:        0 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    4
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_SYSTEM_Initialize
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _WDT_Initialize
  1788  0272                     _WDT_Initialize:
  1789  0272                     l994:	
  1790                           ;incstack = 0
  1791                           ; Regs used in _WDT_Initialize: [wreg]
  1792                           
  1793                           
  1794                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  1795  0272  3016               	movlw	22
  1796  0273  0021               	movlb	1	; select bank1
  1797  0274  0097               	movwf	23	;volatile
  1798  0275                     l23:
  1799  0275  0008               	return
  1800  0276                     __end_of_WDT_Initialize:
  1801                           
  1802                           	psect	text8
  1803  0217                     __ptext8:	
  1804 ;; *************** function _PIN_MANAGER_Initialize *****************
  1805 ;; Defined at:
  1806 ;;		line 56 in file "mcc_generated_files/pin_manager.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1820 ;;      Params:         0       0       0       0
  1821 ;;      Locals:         0       0       0       0
  1822 ;;      Temps:          0       0       0       0
  1823 ;;      Totals:         0       0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    5
  1827 ;; This function calls:
  1828 ;;		_IOCAF0_SetInterruptHandler
  1829 ;; This function is called by:
  1830 ;;		_SYSTEM_Initialize
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _PIN_MANAGER_Initialize
  1836  0217                     _PIN_MANAGER_Initialize:
  1837  0217                     l966:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1840                           
  1841                           
  1842                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  1843  0217  0022               	movlb	2	; select bank2
  1844  0218  018C               	clrf	12	;volatile
  1845  0219                     l968:
  1846                           
  1847                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x09;
  1848  0219  3009               	movlw	9
  1849  021A  0021               	movlb	1	; select bank1
  1850  021B  008C               	movwf	12	;volatile
  1851  021C                     l970:
  1852                           
  1853                           ;mcc_generated_files/pin_manager.c: 71:     ANSELA = 0x00;
  1854  021C  0023               	movlb	3	; select bank3
  1855  021D  018C               	clrf	12	;volatile
  1856  021E                     l972:
  1857                           
  1858                           ;mcc_generated_files/pin_manager.c: 76:     WPUA = 0x00;
  1859  021E  0024               	movlb	4	; select bank4
  1860  021F  018C               	clrf	12	;volatile
  1861  0220                     l974:
  1862                           
  1863                           ;mcc_generated_files/pin_manager.c: 77:     OPTION_REGbits.nWPUEN = 1;
  1864  0220  0021               	movlb	1	; select bank1
  1865  0221  1795               	bsf	21,7	;volatile
  1866  0222                     l976:
  1867                           
  1868                           ;mcc_generated_files/pin_manager.c: 83:     APFCON = 0x00;
  1869  0222  0022               	movlb	2	; select bank2
  1870  0223  019D               	clrf	29	;volatile
  1871  0224                     l978:
  1872                           
  1873                           ;mcc_generated_files/pin_manager.c: 89:     IOCAFbits.IOCAF0 = 0;
  1874  0224  0027               	movlb	7	; select bank7
  1875  0225  1013               	bcf	19,0	;volatile
  1876  0226                     l980:
  1877                           
  1878                           ;mcc_generated_files/pin_manager.c: 91:     IOCANbits.IOCAN0 = 0;
  1879  0226  1012               	bcf	18,0	;volatile
  1880  0227                     l982:
  1881                           
  1882                           ;mcc_generated_files/pin_manager.c: 93:     IOCAPbits.IOCAP0 = 1;
  1883  0227  1411               	bsf	17,0	;volatile
  1884  0228                     l984:
  1885                           
  1886                           ;mcc_generated_files/pin_manager.c: 98:     IOCAF0_SetInterruptHandler(IOCAF0_DefaultInt
      +                          erruptHandler);
  1887  0228  3076               	movlw	low _IOCAF0_DefaultInterruptHandler
  1888  0229  00F1               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
  1889  022A  3002               	movlw	high _IOCAF0_DefaultInterruptHandler
  1890  022B  00F2               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
  1891  022C  3182  226C  3182   	fcall	_IOCAF0_SetInterruptHandler
  1892  022F                     l986:
  1893                           
  1894                           ;mcc_generated_files/pin_manager.c: 101:     INTCONbits.IOCIE = 1;
  1895  022F  158B               	bsf	11,3	;volatile
  1896  0230                     l54:
  1897  0230  0008               	return
  1898  0231                     __end_of_PIN_MANAGER_Initialize:
  1899                           
  1900                           	psect	text9
  1901  026C                     __ptext9:	
  1902 ;; *************** function _IOCAF0_SetInterruptHandler *****************
  1903 ;; Defined at:
  1904 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1907 ;;		 -> IOCAF0_DefaultInterruptHandler(1), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1919 ;;      Params:         2       0       0       0
  1920 ;;      Locals:         0       0       0       0
  1921 ;;      Temps:          0       0       0       0
  1922 ;;      Totals:         2       0       0       0
  1923 ;;Total ram usage:        2 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    4
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_PIN_MANAGER_Initialize
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _IOCAF0_SetInterruptHandler
  1935  026C                     _IOCAF0_SetInterruptHandler:
  1936  026C                     l954:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _IOCAF0_SetInterruptHandler: [wreg]
  1939                           
  1940                           
  1941                           ;mcc_generated_files/pin_manager.c: 133:     IOCAF0_InterruptHandler = InterruptHandler;
  1942  026C  0872               	movf	IOCAF0_SetInterruptHandler@InterruptHandler+1,w
  1943  026D  0020               	movlb	0	; select bank0
  1944  026E  00D2               	movwf	_IOCAF0_InterruptHandler+1
  1945  026F  0871               	movf	IOCAF0_SetInterruptHandler@InterruptHandler,w
  1946  0270  00D1               	movwf	_IOCAF0_InterruptHandler
  1947  0271                     l65:
  1948  0271  0008               	return
  1949  0272                     __end_of_IOCAF0_SetInterruptHandler:
  1950                           
  1951                           	psect	text10
  1952  0265                     __ptext10:	
  1953 ;; *************** function _OSCILLATOR_Initialize *****************
  1954 ;; Defined at:
  1955 ;;		line 58 in file "mcc_generated_files/mcc.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1969 ;;      Params:         0       0       0       0
  1970 ;;      Locals:         0       0       0       0
  1971 ;;      Temps:          0       0       0       0
  1972 ;;      Totals:         0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    4
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_SYSTEM_Initialize
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _OSCILLATOR_Initialize
  1985  0265                     _OSCILLATOR_Initialize:
  1986  0265                     l988:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1989                           
  1990                           
  1991                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x72;
  1992  0265  3072               	movlw	114
  1993  0266  0021               	movlb	1	; select bank1
  1994  0267  0099               	movwf	25	;volatile
  1995  0268                     l990:
  1996                           
  1997                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  1998  0268  0198               	clrf	24	;volatile
  1999  0269                     l992:
  2000                           
  2001                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2002  0269  0022               	movlb	2	; select bank2
  2003  026A  0196               	clrf	22	;volatile
  2004  026B                     l20:
  2005  026B  0008               	return
  2006  026C                     __end_of_OSCILLATOR_Initialize:
  2007                           
  2008                           	psect	text11
  2009  01C1                     __ptext11:	
  2010 ;; *************** function _Ausgabe *****************
  2011 ;; Defined at:
  2012 ;;		line 51 in file "main.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  y               2    1[COMMON] int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2026 ;;      Params:         2       0       0       0
  2027 ;;      Locals:         0       0       0       0
  2028 ;;      Temps:          0       0       0       0
  2029 ;;      Totals:         2       0       0       0
  2030 ;;Total ram usage:        2 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    4
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _Ausgabe
  2042  01C1                     _Ausgabe:
  2043  01C1                     l85:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _Ausgabe: [wreg-fsr0h+status,2+status,0]
  2046                           ;main.c: 53:         do { LATAbits.LATA5 = 0; } while(0);
  2047                           
  2048  01C1  0022               	movlb	2	; select bank2
  2049  01C2  128C               	bcf	12,5	;volatile
  2050  01C3                     l87:	
  2051                           ;main.c: 54:         do { LATAbits.LATA4 = 0; } while(0);
  2052                           
  2053  01C3  120C               	bcf	12,4	;volatile
  2054  01C4                     l89:	
  2055                           ;main.c: 55:         do { LATAbits.LATA2 = 0; } while(0);
  2056                           
  2057  01C4  110C               	bcf	12,2	;volatile
  2058  01C5                     l91:	
  2059                           ;main.c: 56:         do { LATAbits.LATA1 = 0; } while(0);
  2060                           
  2061  01C5  108C               	bcf	12,1	;volatile
  2062  01C6  29D9               	goto	l1056
  2063  01C7                     l95:	
  2064                           ;main.c: 63:                 do { LATAbits.LATA1 = 1; } while(0);
  2065                           
  2066  01C7  148C               	bsf	12,1	;volatile
  2067  01C8  29F2               	goto	l125
  2068  01C9                     l99:	
  2069                           ;main.c: 67:                 do { LATAbits.LATA4 = 1; } while(0);
  2070                           
  2071  01C9  160C               	bsf	12,4	;volatile
  2072  01CA  29F2               	goto	l125
  2073  01CB                     l102:	
  2074                           ;main.c: 73:                 do { LATAbits.LATA4 = 1; } while(0);
  2075                           
  2076  01CB  160C               	bsf	12,4	;volatile
  2077  01CC                     l104:	
  2078                           ;main.c: 75:                 do { LATAbits.LATA1 = 1; } while(0);
  2079                           
  2080  01CC  148C               	bsf	12,1	;volatile
  2081  01CD  29F2               	goto	l125
  2082  01CE                     l107:	
  2083                           ;main.c: 78:                 do { LATAbits.LATA5 = 1; } while(0);
  2084                           
  2085  01CE  168C               	bsf	12,5	;volatile
  2086  01CF                     l109:	
  2087                           ;main.c: 80:                 do { LATAbits.LATA2 = 1; } while(0);
  2088                           
  2089  01CF  150C               	bsf	12,2	;volatile
  2090  01D0  29F2               	goto	l125
  2091  01D1                     l112:	
  2092                           ;main.c: 85:                 do { LATAbits.LATA5 = 1; } while(0);
  2093                           
  2094  01D1  168C               	bsf	12,5	;volatile
  2095  01D2                     l114:	
  2096                           ;main.c: 87:                 do { LATAbits.LATA2 = 1; } while(0);
  2097                           
  2098  01D2  150C               	bsf	12,2	;volatile
  2099  01D3                     l116:	
  2100                           ;main.c: 88:                 do { LATAbits.LATA1 = 1; } while(0);
  2101                           
  2102  01D3  148C               	bsf	12,1	;volatile
  2103  01D4  29F2               	goto	l125
  2104  01D5                     l119:	
  2105                           ;main.c: 91:                 do { LATAbits.LATA5 = 1; } while(0);
  2106                           
  2107  01D5  168C               	bsf	12,5	;volatile
  2108  01D6                     l121:	
  2109                           ;main.c: 92:                 do { LATAbits.LATA4 = 1; } while(0);
  2110                           
  2111  01D6  160C               	bsf	12,4	;volatile
  2112  01D7                     l123:	
  2113                           ;main.c: 93:                 do { LATAbits.LATA2 = 1; } while(0);
  2114                           
  2115  01D7  150C               	bsf	12,2	;volatile
  2116  01D8  29F2               	goto	l125
  2117  01D9                     l1056:
  2118                           
  2119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2120                           ; Switch size 1, requested type "simple"
  2121                           ; Number of cases is 1, Range of values is 0 to 0
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte            4     3 (average)
  2125                           ; direct_byte            8     6 (fixed)
  2126                           ; jumptable            260     6 (fixed)
  2127                           ;	Chosen strategy is simple_byte
  2128  01D9  0872               	movf	Ausgabe@y+1,w
  2129  01DA  3A00               	xorlw	0	; case 0
  2130  01DB  1903               	skipnz
  2131  01DC  29DE               	goto	l1132
  2132  01DD  29F2               	goto	l125
  2133  01DE                     l1132:
  2134                           
  2135                           ; Switch size 1, requested type "simple"
  2136                           ; Number of cases is 6, Range of values is 1 to 6
  2137                           ; switch strategies available:
  2138                           ; Name         Instructions Cycles
  2139                           ; simple_byte           19    10 (average)
  2140                           ; direct_byte           21     9 (fixed)
  2141                           ; jumptable            263     9 (fixed)
  2142                           ;	Chosen strategy is simple_byte
  2143  01DE  0871               	movf	Ausgabe@y,w
  2144  01DF  3A01               	xorlw	1	; case 1
  2145  01E0  1903               	skipnz
  2146  01E1  29C7               	goto	l95
  2147  01E2  3A03               	xorlw	3	; case 2
  2148  01E3  1903               	skipnz
  2149  01E4  29C9               	goto	l99
  2150  01E5  3A01               	xorlw	1	; case 3
  2151  01E6  1903               	skipnz
  2152  01E7  29CB               	goto	l102
  2153  01E8  3A07               	xorlw	7	; case 4
  2154  01E9  1903               	skipnz
  2155  01EA  29CE               	goto	l107
  2156  01EB  3A01               	xorlw	1	; case 5
  2157  01EC  1903               	skipnz
  2158  01ED  29D1               	goto	l112
  2159  01EE  3A03               	xorlw	3	; case 6
  2160  01EF  1903               	skipnz
  2161  01F0  29D5               	goto	l119
  2162  01F1  29F2               	goto	l125
  2163  01F2                     l125:
  2164  01F2  0008               	return
  2165  01F3                     __end_of_Ausgabe:
  2166                           
  2167                           	psect	intentry
  2168  0004                     __pintentry:	
  2169 ;; *************** function _INTERRUPT_InterruptManager *****************
  2170 ;; Defined at:
  2171 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2185 ;;      Params:         0       0       0       0
  2186 ;;      Locals:         0       0       0       0
  2187 ;;      Temps:          1       0       0       0
  2188 ;;      Totals:         1       0       0       0
  2189 ;;Total ram usage:        1 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    3
  2192 ;; This function calls:
  2193 ;;		_PIN_MANAGER_IOC
  2194 ;; This function is called by:
  2195 ;;		Interrupt level 1
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199  0004                     _INTERRUPT_InterruptManager:
  2200                           
  2201                           ;incstack = 0
  2202  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2203                           
  2204                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2205  0005  3180               	pagesel	$
  2206  0006                     i1l1104:
  2207                           
  2208                           ;mcc_generated_files/interrupt_manager.c: 55:     if (INTCONbits.IOCIE == 1 && INTCONbit
      +                          s.IOCIF == 1) {
  2209  0006  1D8B               	btfss	11,3	;volatile
  2210  0007  2809               	goto	u39_21
  2211  0008  280A               	goto	u39_20
  2212  0009                     u39_21:
  2213  0009  2818               	goto	i1l160
  2214  000A                     u39_20:
  2215  000A                     i1l1106:
  2216  000A  1C0B               	btfss	11,0	;volatile
  2217  000B  280D               	goto	u40_21
  2218  000C  280E               	goto	u40_20
  2219  000D                     u40_21:
  2220  000D  2818               	goto	i1l160
  2221  000E                     u40_20:
  2222  000E                     i1l1108:
  2223                           
  2224                           ;mcc_generated_files/interrupt_manager.c: 58:         PIN_MANAGER_IOC();
  2225  000E  3182  225C  3180   	fcall	_PIN_MANAGER_IOC
  2226  0011                     i1l1110:
  2227                           
  2228                           ;mcc_generated_files/interrupt_manager.c: 60:         _delay((unsigned long)((20)*(80000
      +                          00/4000.0)));
  2229  0011  3034               	movlw	52
  2230  0012  00F0               	movwf	??_INTERRUPT_InterruptManager
  2231  0013  30F2               	movlw	242
  2232  0014                     u43_27:
  2233  0014  0B89               	decfsz	9,f
  2234  0015  2814               	goto	u43_27
  2235  0016  0BF0               	decfsz	??_INTERRUPT_InterruptManager,f
  2236  0017  2814               	goto	u43_27
  2237  0018                     i1l160:	
  2238                           ;mcc_generated_files/interrupt_manager.c: 93:     } else {
  2239                           
  2240  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2241  0019  0009               	retfie
  2242  001A                     __end_of_INTERRUPT_InterruptManager:
  2243                           
  2244                           	psect	text13
  2245  025C                     __ptext13:	
  2246 ;; *************** function _PIN_MANAGER_IOC *****************
  2247 ;; Defined at:
  2248 ;;		line 105 in file "mcc_generated_files/pin_manager.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2262 ;;      Params:         0       0       0       0
  2263 ;;      Locals:         0       0       0       0
  2264 ;;      Temps:          0       0       0       0
  2265 ;;      Totals:         0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    2
  2269 ;; This function calls:
  2270 ;;		_IOCAF0_ISR
  2271 ;; This function is called by:
  2272 ;;		_INTERRUPT_InterruptManager
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _PIN_MANAGER_IOC
  2278  025C                     _PIN_MANAGER_IOC:
  2279  025C                     i1l1050:	
  2280                           ;incstack = 0
  2281                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2282                           
  2283                           
  2284                           ;mcc_generated_files/pin_manager.c: 108:     if(IOCAFbits.IOCAF0 == 1)
  2285  025C  0027               	movlb	7	; select bank7
  2286  025D  1C13               	btfss	19,0	;volatile
  2287  025E  2A60               	goto	u35_21
  2288  025F  2A61               	goto	u35_20
  2289  0260                     u35_21:
  2290  0260  2A64               	goto	i1l58
  2291  0261                     u35_20:
  2292  0261                     i1l1052:
  2293                           
  2294                           ;mcc_generated_files/pin_manager.c: 109:     {;mcc_generated_files/pin_manager.c: 110:  
      +                                 IOCAF0_ISR();
  2295  0261  3182  2243  3182   	fcall	_IOCAF0_ISR
  2296  0264                     i1l58:
  2297  0264  0008               	return
  2298  0265                     __end_of_PIN_MANAGER_IOC:
  2299                           
  2300                           	psect	text14
  2301  0243                     __ptext14:	
  2302 ;; *************** function _IOCAF0_ISR *****************
  2303 ;; Defined at:
  2304 ;;		line 117 in file "mcc_generated_files/pin_manager.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0, pclath, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2318 ;;      Params:         0       0       0       0
  2319 ;;      Locals:         0       0       0       0
  2320 ;;      Temps:          0       0       0       0
  2321 ;;      Totals:         0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    1
  2325 ;; This function calls:
  2326 ;;		Absolute function
  2327 ;;		_IOCAF0_DefaultInterruptHandler
  2328 ;; This function is called by:
  2329 ;;		_PIN_MANAGER_IOC
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _IOCAF0_ISR
  2335  0243                     _IOCAF0_ISR:
  2336  0243                     i1l996:	
  2337                           ;incstack = 0
  2338                           ; Regs used in _IOCAF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2339                           
  2340                           
  2341                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCAF0_InterruptHandler)
  2342  0243  0020               	movlb	0	; select bank0
  2343  0244  0851               	movf	_IOCAF0_InterruptHandler,w
  2344  0245  0452               	iorwf	_IOCAF0_InterruptHandler+1,w
  2345  0246  1903               	btfsc	3,2
  2346  0247  2A49               	goto	u24_21
  2347  0248  2A4A               	goto	u24_20
  2348  0249                     u24_21:
  2349  0249  2A4F               	goto	i1l1000
  2350  024A                     u24_20:
  2351  024A                     i1l998:
  2352                           
  2353                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCAF0_InterruptHandler();
  2354  024A  0852               	movf	_IOCAF0_InterruptHandler+1,w
  2355  024B  008A               	movwf	10
  2356  024C  0851               	movf	_IOCAF0_InterruptHandler,w
  2357  024D  000A               	callw
  2358  024E  3182               	pagesel	$
  2359  024F                     i1l1000:
  2360                           
  2361                           ;mcc_generated_files/pin_manager.c: 126:     IOCAFbits.IOCAF0 = 0;
  2362  024F  0027               	movlb	7	; select bank7
  2363  0250  1013               	bcf	19,0	;volatile
  2364  0251                     i1l62:
  2365  0251  0008               	return
  2366  0252                     __end_of_IOCAF0_ISR:
  2367                           
  2368                           	psect	text15
  2369  0276                     __ptext15:	
  2370 ;; *************** function _IOCAF0_DefaultInterruptHandler *****************
  2371 ;; Defined at:
  2372 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		None
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2386 ;;      Params:         0       0       0       0
  2387 ;;      Locals:         0       0       0       0
  2388 ;;      Temps:          0       0       0       0
  2389 ;;      Totals:         0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_PIN_MANAGER_Initialize
  2396 ;;		_IOCAF0_ISR
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _IOCAF0_DefaultInterruptHandler
  2402  0276                     _IOCAF0_DefaultInterruptHandler:
  2403  0276                     i1l68:	
  2404                           ;incstack = 0
  2405                           ; Regs used in _IOCAF0_DefaultInterruptHandler: []
  2406                           
  2407  0276  0008               	return
  2408  0277                     __end_of_IOCAF0_DefaultInterruptHandler:
  2409  007E                     btemp	set	126	;btemp
  2410  007E                     int$flags	set	126
  2411  007E                     wtemp0	set	126
  2412                           
  2413                           	psect	config
  2414                           
  2415                           ;Config register CONFIG1 @ 0x8007
  2416                           ;	Oscillator Selection
  2417                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2418                           ;	Watchdog Timer Enable
  2419                           ;	WDTE = OFF, WDT disabled
  2420                           ;	Power-up Timer Enable
  2421                           ;	PWRTE = OFF, PWRT disabled
  2422                           ;	MCLR Pin Function Select
  2423                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2424                           ;	Flash Program Memory Code Protection
  2425                           ;	CP = OFF, Program memory code protection is disabled
  2426                           ;	Data Memory Code Protection
  2427                           ;	CPD = OFF, Data memory code protection is disabled
  2428                           ;	Brown-out Reset Enable
  2429                           ;	BOREN = ON, Brown-out Reset enabled
  2430                           ;	Clock Out Enable
  2431                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2432                           ;	Internal/External Switchover
  2433                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2434                           ;	Fail-Safe Clock Monitor Enable
  2435                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2436  8007                     	org	32775
  2437  8007  3FE4               	dw	16356
  2438                           
  2439                           ;Config register CONFIG2 @ 0x8008
  2440                           ;	Flash Memory Self-Write Protection
  2441                           ;	WRT = OFF, Write protection off
  2442                           ;	PLL Enable
  2443                           ;	PLLEN = OFF, 4x PLL disabled
  2444                           ;	Stack Overflow/Underflow Reset Enable
  2445                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2446                           ;	Brown-out Reset Voltage Selection
  2447                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2448                           ;	Low-Voltage Programming Enable
  2449                           ;	LVP = ON, Low-voltage programming enabled
  2450  8008                     	org	32776
  2451  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     41      51
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    IOCAF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF0_DefaultInterruptHandler(), 

    IOCAF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _Wurfzahl->___awmod
    _rand->___omul
    ___awmod->_rand
    _PIN_MANAGER_Initialize->_IOCAF0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Wurfzahl
    _Wurfzahl->___awmod
    _rand->___omul
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1345
                                             34 BANK0      7     7      0
                            _Ausgabe
                  _SYSTEM_Initialize
                           _Wurfzahl
 ---------------------------------------------------------------------------------
 (1) _Wurfzahl                                             4     2      2     911
                                             30 BANK0      4     2      2
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2      98
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                10     8      2     244
                                             10 COMMON     2     0      2
                                             16 BANK0      8     8      0
                             ___omul
 ---------------------------------------------------------------------------------
 (3) ___omul                                              25     9     16     244
                                              1 COMMON     9     9      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                             12 COMMON     1     1      0
                                             24 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCAF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF0_SetInterruptHandler                           2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ausgabe                                              2     0      2     174
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF0_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ausgabe
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF0_SetInterruptHandler
     _WDT_Initialize
   _Wurfzahl
     ___awmod
       _rand (ARG)
         ___omul
     _rand
       ___omul
     _srand

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF0_ISR
       Absolute function(Fake) *
       _IOCAF0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      40       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     29      33       6       63.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      40      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Mar 20 18:10:05 2021

                                        l20 026B                                          l23 0275  
                                        l17 025B                                          l54 0230  
                                        l65 0271                                          l91 01C5  
                                        l85 01C1                                          l95 01C7  
                                        l87 01C3                                          l89 01C4  
                                        l99 01C9                                         l102 01CB  
                                       l112 01D1                                         l104 01CC  
                                       l121 01D6                                         l114 01D2  
                                       l123 01D7                                         l107 01CE  
                                       l116 01D3                                         l140 00E8  
                                       l109 01CF                                         l125 01F2  
                                       l142 00E9                                         l119 01D5  
                                       l143 00EA                                         l128 0216  
                                       l136 00E5                                         l330 01C0  
                                       l138 00E7                                         l329 01B0  
                                       l476 0174                                         l771 0242  
                                       l774 00A7                                         l960 0184  
                                       l954 026C                                         l970 021C  
                                       l962 0194                                         l980 0226  
                                       l972 021E                                         l964 019C  
                                       l956 0175                                         l990 0268  
                                       l982 0227                                         l974 0220  
                                       l966 0217                                         l958 017F  
                                       l992 0269                                         l984 0228  
                                       l976 0222                                         l968 0219  
                                       l986 022F                                         l978 0224  
                                       l994 0272                                         l988 0265  
                                       _RA0 0060                                         u210 017C  
                                       u300 014D                                         u220 0184  
                                       u301 014C                                         u221 0183  
                                       u310 0157                                         u230 01B0  
                                       u311 0156                                         u231 01AF  
                                       u330 0166                                         u250 00A0  
                                       u331 0165                                         u315 0153  
                                       u340 016B                                         u260 0127  
                                       u341 016A                                         u325 015C  
                                       u261 0126                                         u270 0132  
                                       u271 0131                                         u255 0097  
                                       u280 013D                                         u360 00B9  
                                       u281 013C                                         u417 0100  
                                       u361 00B8                                         u370 00BF  
                                       u427 010C                                         u371 00BE  
                                       u380 00E5                                         u381 00E4  
                                       u295 0141                                         u385 00E1  
                              ___awmod@sign 003D                                         wreg 0009  
                                      l1010 0121                                        l1002 0231  
                                      l1020 0132                                        l1012 0123  
                                      l1004 0029                                        l1100 0111  
                                      l1030 0149                                        l1022 0137  
                                      l1014 0127                                        l1006 0082  
                                      l1102 0118                                        l1032 014D  
                                      l1024 013D                                        l1040 0166  
                                      l1016 012C                                        l1042 016B  
                                      l1034 0157                                        l1026 0140  
                                      l1018 012E                                        l1132 01DE  
                                      l1044 0170                                        l1036 015B  
                                      l1028 0145                                        l1038 0160  
                                      l1062 01F3                                        l1070 00A8  
                                      l1056 01D9                                        l1048 0252  
                                      l1064 01FB                                        l1080 00B4  
                                      l1072 00AB                                        l1066 0212  
                                      l1082 00B9                                        l1090 00D7  
                                      l1074 00AC                                        l1092 00EB  
                                      l1084 00BF                                        l1076 00AD  
                                      l1094 00F0                                        l1086 00CB  
                                      l1078 00B2                                        l1096 00FA  
                                      l1088 00CD                                        l1098 0108  
                                      _LATA 010C                                 main@counter 0044  
                                      i1l62 0251                                        i1l58 0264  
                                      i1l68 0276                                        _WPUA 020C  
                                      _main 00A8                                        _rand 0029  
                                      _seed 0049                                        fsr1h 0007  
                                      fsr1l 0006                                        btemp 007E  
                                      start 001A                             __end_of_Ausgabe 01F3  
                       __size_of_IOCAF0_ISR 000F              __size_of_OSCILLATOR_Initialize 0007  
             __end_of_OSCILLATOR_Initialize 026C                                       ?_main 0070  
                                     ?_rand 007A                             __end_of___awmod 0175  
                                     i1l160 0018                                       i1l996 0243  
                                     i1l998 024A                                       u24_20 024A  
                                     u40_20 000E                                       u24_21 0249  
                                     u40_21 000D                                       u35_20 0261  
                                     u35_21 0260                                       u43_27 0014  
                                     u39_20 000A                                       u39_21 0009  
                                     _TRISA 008C                     __end_of_PIN_MANAGER_IOC 0265  
                            _WDT_Initialize 0272                                       _srand 0231  
                                     main@x 0046                                       pclath 000A  
                                     status 0003                                       wtemp0 007E  
                           __initialization 001C                                __end_of_main 0121  
                              __end_of_rand 00A8                 ?_INTERRUPT_InterruptManager 0070  
                                    ??_main 0042                                      ??_rand 0030  
                    __end_of_WDT_Initialize 0276                ??_IOCAF0_SetInterruptHandler 0073  
                                    _APFCON 011D                                      ?_srand 0071  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    i1l1000 024F                                      i1l1110 0011  
                                    i1l1104 0006                                      i1l1050 025C  
                                    i1l1106 000A                                      i1l1052 0261  
                                    i1l1108 000E                                      _OSCCON 0099  
                                    _WDTCON 0097                            __end_of_Wurfzahl 0217  
                                 ??_Ausgabe 0073                                      ___omul 0175  
                                 ??___awmod 007C                             ___awmod@divisor 0038  
       __size_of_IOCAF0_SetInterruptHandler 0006                             ___awmod@counter 003C  
                           ?_WDT_Initialize 0070                                      srand@s 0071  
IOCAF0_SetInterruptHandler@InterruptHandler 0071                            ?_PIN_MANAGER_IOC 0070  
                              ??_IOCAF0_ISR 0070                           _SYSTEM_Initialize 0252  
                   __end_of__initialization 0025                          ?_SYSTEM_Initialize 0070  
                            __pcstackCOMMON 0070                         ??_SYSTEM_Initialize 0073  
                             __end_of_srand 0243                          __end_of_IOCAF0_ISR 0252  
                            _OPTION_REGbits 0095                   __end_of_SYSTEM_Initialize 025C  
                                   ??_srand 0073                                  __pbssBANK0 0049  
                                __pmaintext 00A8                                     ?___omul 0020  
                                __pintentry 0004                         ___omul@multiplicand 0028  
                                 ?_Wurfzahl 003E          __end_of_IOCAF0_SetInterruptHandler 0272  
                _IOCAF0_SetInterruptHandler 026C                                     _OSCTUNE 0098  
                                   _Ausgabe 01C1                         Wurfzahl@zufallszahl 0040  
                                   ___awmod 0121                             __size_of___omul 004C  
                                   __ptext1 01F3                                     __ptext2 0231  
                                   __ptext3 0029                                     __ptext4 0175  
                                   __ptext5 0121                                     __ptext6 0252  
                                   __ptext7 0272                                     __ptext8 0217  
                                   __ptext9 026C                       _OSCILLATOR_Initialize 0265  
                                ??_Wurfzahl 007D                            ___awmod@dividend 003A  
                  ??_PIN_MANAGER_Initialize 0073                                   _IOCAFbits 0393  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                __size_of_SYSTEM_Initialize 000A                        end_of_initialization 0025  
                            ___omul@product 0072                            ??_WDT_Initialize 0071  
                   _IOCAF0_InterruptHandler 0051                              __end_of___omul 01C1  
                    ?_OSCILLATOR_Initialize 0070                         start_initialization 001C  
           __size_of_PIN_MANAGER_Initialize 001A                           ___omul@multiplier 0020  
                  __size_of_PIN_MANAGER_IOC 0009                                    ??___omul 0071  
          ??_IOCAF0_DefaultInterruptHandler 0070             ?_IOCAF0_DefaultInterruptHandler 0070  
                                 ___latbits 0001                 ?_IOCAF0_SetInterruptHandler 0071  
                             __pcstackBANK0 0020                           __size_of_Wurfzahl 0024  
                                  ?_Ausgabe 0071                                   __pnvBANK0 0051  
                    _PIN_MANAGER_Initialize 0217                                    ?___awmod 0038  
              ??_INTERRUPT_InterruptManager 0070                                   Wurfzahl@y 003E  
                            __size_of_srand 0012                                    _LATAbits 010C  
       __size_of_INTERRUPT_InterruptManager 0016                           ??_PIN_MANAGER_IOC 0070  
                                  Ausgabe@y 0071                            __size_of_Ausgabe 0032  
                   ??_OSCILLATOR_Initialize 0071                            __size_of___awmod 0054  
                                  _Wurfzahl 01F3                                    __ptext10 0265  
                                  __ptext11 01C1                                    __ptext13 025C  
                                  __ptext14 0243                                    __ptext15 0276  
                                _IOCAF0_ISR 0243                               __size_of_main 0079  
                             __size_of_rand 007F                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 001A                  _INTERRUPT_InterruptManager 0004  
                                  main@wurf 0047                                  _INTCONbits 000B  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
    __end_of_IOCAF0_DefaultInterruptHandler 0277     __size_of_IOCAF0_DefaultInterruptHandler 0001  
            _IOCAF0_DefaultInterruptHandler 0276                     ?_PIN_MANAGER_Initialize 0070  
                               ?_IOCAF0_ISR 0070              __end_of_PIN_MANAGER_Initialize 0231  
                           _PIN_MANAGER_IOC 025C  
